generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model Product {
  id            String    @id @default(cuid()) @map("_id")
  name          String
  description   String
  price         Float
  originalPrice Float?
  wholesalePrice Float?
  imageUrl      String
  category      String
  stock         Int      @default(0)
  color         String?
  material      String?
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
  OrderItem     OrderItem[]
  version       Int      @default(0)
}

model Cart {
  id        String      @id @default(auto()) @map("_id") @db.ObjectId
  userId    String      @db.ObjectId
  items     CartItem[]
  createdAt DateTime    @default(now())
  updatedAt DateTime    @updatedAt
}

model CartItem {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  cartId    String   @db.ObjectId
  productId String   @db.ObjectId
  quantity  Int
  cart      Cart     @relation(fields: [cartId], references: [id])
}

model Order {
  id              String          @id @default(cuid()) @map("_id")
  orderNumber     String
  status          OrderStatus     @default(PROCESSING)
  createdAt       DateTime        @default(now())
  updatedAt       DateTime        @updatedAt
  items           OrderItem[]
  shippingInfo    ShippingInfo?   @relation("OrderToShipping")
  statusHistory   StatusHistory[]
  paymentIntentId String
  subtotal        Float
  gst             Float
  pst             Float
  total           Float
}

model ShippingInfo {
  id          String  @id @default(cuid()) @map("_id")
  firstName   String
  lastName    String
  email       String
  address     String
  apartment   String?
  city        String
  province    String
  postalCode  String
  country     String
  phone       String
  order       Order   @relation("OrderToShipping", fields: [orderId], references: [id])
  orderId     String  @unique
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model OrderItem {
  id        String   @id @default(cuid()) @map("_id")
  orderId   String
  productId String
  quantity  Int
  price     Float
  order     Order    @relation(fields: [orderId], references: [id])
  product   Product  @relation(fields: [productId], references: [id])
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model StatusHistory {
  id        String      @id @default(cuid()) @map("_id")
  orderId   String
  order     Order       @relation(fields: [orderId], references: [id])
  status    OrderStatus
  notes     String?
  timestamp DateTime    @default(now())
  createdAt DateTime    @default(now())
}

enum OrderStatus {
  PROCESSING
  CONFIRMED
  SHIPPED
  DELIVERED
  CANCELLED
}

model Member {
  id            String    @id @default(cuid()) @map("_id")
  email         String    @unique
  password      String
  firstName     String
  lastName      String
  address       String
  apartment     String?
  city          String
  province      String
  postalCode    String
  country       String
  phone         String
  isVerified    Boolean   @default(false)
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
}

model VerificationToken {
  id        String   @id @default(cuid()) @map("_id")
  token     String   @unique
  email     String
  expires   DateTime
  createdAt DateTime @default(now())
}